:root, html, body {
  font-family: var(--ui-font);
  font-size: 14px;

  user-select: none;

  box-sizing: border-box;

  *, *:before, *:after {
    box-sizing: inherit;
  }
}

templates, assets {
  display: none;
}

root {
  &, canvas-container, ui-layer {
    display: block;
    position: fixed;
    top: 0;
    left: 0;
    margin: 0;
    padding: 0;

    width: 100%;
    height: 100%;
  }

  canvas-container {
    z-index: 1000;
    background: white;
  }

  ui-layer {
    z-index: 2000;
    background: transparent !important;
  }
}

/* UI Components */

input, button, label, select {
  font-family: var(--input-font);

  display: block;
  width: 100%;

  margin-bottom: 0.5em;
  padding: 0.5em;

  border-radius: 2px;
  border: none;
  outline: none;

  transition: var(--ui-component-transition);

  &[disabled] {
    cursor: not-allowed;
  }
}

label {
  margin-bottom: 0;
}

input, select {
  color: var(--input-color);
  background: var(--input-bg);

  &:invalid {
    outline: 2px solid red;
  }

  &:hover:not([disabled]) {
    background: var(--input-bg-hover);
  }

  &[disabled] {
    color: var(--input-color-disabled);
  }
}

button {
  color: var(--button-color);
  background: var(--button-bg);

  box-shadow: var(--button-box-shadow);

  cursor: pointer;

  &:hover:not([disabled]):not(.active):not(:active), &.hover:not(.active):not(:active) {
    background: var(--button-bg-hover);
  }

  &:active:not([disabled]), &.active {
    color: var(--button-color-active);
    background: var(--button-bg-active);
    box-shadow: var(--button-box-shadow-active);
  }

  &.active:hover:not(:active) {
    background: var(--button-bg-active-hover);
  }

  &[disabled] {
    color: var(--button-color-disabled);
  }
}

.pad {
  padding: 1em;
}

.pane {
  font-size: 1rem;

  color: var(--pane-color);
  background: var(--pane-bg);
  box-shadow: var(--pane-box-shadow);

  overflow-y: auto;

  &:extend(.pad);

  &.no-padding {
    padding: 0;
  }

  divider {
    display: block;
    width: 100%;
    height: 2px;

    background: #000000;

    border-top: 1px solid #2f3138;
  }
}

/* Helpers */

.monospace {
  font-family: var(--ui-font-mono);
}

.half {
  width: 50%;
}

.full {
  width: 100%;
}

.left-float {
  float: left;

  &:not(:last-child) {
    padding-right: 1em;
  }
}

.clear, divider {
  clear: both;
}

ui-layer {
  pointer-events: none;

  & .pane {
    pointer-events: auto;

    item {
      display: block;

      font-size: 1.25em;

      background: inherit;

      border-top: 1px solid #2f3138;
      border-bottom: 1px solid #000000;
      color: #bdbdbd;
      padding: 0 1em;
      white-space: nowrap;
      line-height: 2.5em;

      cursor: pointer;
      transition: var(--ui-component-transition);

      &:hover {
        background: #192533;
      }
    }

    .horizontal-items {
      display: flex;
      flex-direction: row;

      item {
        flex: 1;

        text-align: center;

        &:not(:first-child) {
          border-left: 1px solid #000000;
        }
        &:not(:last-child) {
          border-right: 1px solid #2f3138;
        }
      }
    }
  }

  & > .fill-screen {
    width: 100%;
    height: 100%;

    background: transparent;
  }

  .overlay-pane-con {
    &:extend(.centering-grid);
    &:extend(ui-layer > .fill-screen);

    .overlay-pane {
      &:extend(.centering-grid > *:first-child);
      &:extend(.pane all);
    }
  }
}

.centering-grid {
  display: grid;
  place-items: center;

  & > *:first-child {
    display: block;
  }
}

.cursor-wait {
  cursor: wait;
  pointer-events: auto;
}
